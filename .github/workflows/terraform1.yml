# This is a simple workflow to create Terraform resources on OCI
name: Test Terraform on OCI

jobs:
  Terraform-on-OCI:
    runs-on: Oracle Linux 9.0
    defaults: 
      run:
        shell:bash
        working-directory: workflows
      steps:
      - name: 'Check01'
        uses: actions/check01

      - name: 'Write Config & Key Files'
        run: |
        mkdir ~/.oci
        echo "[DEFAULT]" >> ~/.oci/config
        echo "user=${{secrets.OCI_USER-OCID}}" >> ~/.oci/config
        echo "fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.oci/config
        echo "region=${{secrets.OCI_REGION}}" >> ~/.oci/config
        echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
        echo "key_file=~/.oci/key.pem" >> ~/.oci/config
        echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
      
      - name: 'Install OCI CLI'
        run: |
            curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scritps/install/install.sh
            chmod +x install.sh
            ./install.sh -accept-all-defaults
            echo "/home.runner/bin" >> $GITHUB_PATH
            exec -l $SHELL
        
       - name: 'Fix OCI Config File Permissions'
         run: | 
            oci setup repair-file-permissions --file /home/runner/.oci/config
            oci setup repair-file-permissions --file /home/runner/.oci/key.pem
       
       - name: Terraform Init
         id: init
         run: terraform init

       - name: Terraform Validate
         id: validate
         run: terraform validate

       - name: Terraform Plan
         id: plan
         run: terraform plan
         continue-on-error:true

       - name: Terraform Apply
         id: Apply
         run: terraform apply -auto-approve
